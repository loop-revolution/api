on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
name: Suite
env:
  DATABASE_URL: postgres://postgres:postgres@localhost:5432/testing
  SESSION_SECRET: 1234567890qwertyuiopasdfghjklzxcvbnm
  SMTP_SERVER: TESTING_SMTP_SERVER
  SMTP_USERNAME: TESTING_SMTP_USERNAME
  SMTP_PASSWORD: TESTING_SMTP_PASSWORD
jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: louisbirla/apitestci
    steps:
      - uses: harmon758/postgresql-action@v1
        with:
          postgresql db: testing
          postgresql user: postgres
          postgresql password: postgres
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup DB
        run: cd block-tools && diesel setup && diesel migration run

      - name: Test & Coverage
        run: cargo tarpaulin --out Xml

      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
  lint:
    runs-on: ubuntu-latest
    container: louisbirla/apitestci
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Basic checks
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy

      - name: Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt

      - name: Check formatting
        id: changes
        uses: UnicornGlobal/has-changes-action@v1.0.11

      - name: Fail if formatting is off
        if: steps.changes.outputs.changed == 1
        run: exit 1

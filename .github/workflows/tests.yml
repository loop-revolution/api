on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
name: Tests
env:
  DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/testing
jobs:
  full:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: testing
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.AUTOTHINGS_TOKEN }}
          submodules: true

      - name: Install node (for wait-on)
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Test that it starts
        run: |
          cargo run &
          npx wait-on http-get://localhost:4000 && kill $!

      - name: Test + Generate code coverage
        run: |
          docker run --security-opt seccomp=unconfined -v "${PWD}:/volume" xd009642/tarpaulin sh -c "cargo tarpaulin --out Xml"

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
